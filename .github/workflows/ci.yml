name: Deploy
on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    permissions:
      id-token: write # Needed for auth with Deno Deploy
      contents: read # Needed to clone the repository

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Create port files
        run: |
          echo "8025" > .port_backend
          echo "5000" > .port_frontend

      - name: Install Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install step
        run: "npm install"

      - name: Build step
        run: "deno task build"
      
      - name: Test step
        run: "yarn test"

      - name: Fail if there are any .ts or .tsx files in the project without a .test.ts or .test.tsx file
        run: |
            # Find all .ts and .tsx files, excluding node_modules and dist
            files=$(find . -type f \( -name "*.ts" -o -name "*.tsx" \) -not -path "./node_modules/*" -not -path "./dist/*")
            
            # Check each file for a corresponding test file
            for file in $files; do
              # Skip if it's already a test file
              if [[ $file =~ \.test\.(ts|tsx)$ ]]; then
                continue
              fi
              
              # Construct the expected test file path
              test_file="${file%.*}.test.${file##*.}"
              
              # Check if test file exists
              if [ ! -f "$test_file" ]; then
                echo "Error: No test file found for $file"
                exit 1
              fi
            done

      # - name: Upload to Deno Deploy
      #   uses: denoland/deployctl@v1
      #   with:
      #     project: "tutorial-with-react"
      #     entrypoint: "api/main.ts"
      #     root: ""
